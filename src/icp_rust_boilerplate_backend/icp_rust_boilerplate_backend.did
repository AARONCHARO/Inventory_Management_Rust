type Item = record {
  id : text;
  name : text;
  description : text;
  created_at : nat64;
  quantity : nat32;
};
type ItemPayload = record { name : text; description : text; quantity : nat32 };
type Message = variant {
  Error : text;
  InvalidPayload : text;
  NotFound : text;
  Success : text;
};
type Order = record {
  id : text;
  status : text;
  supplier_id : text;
  order_date : nat64;
  quantity : nat32;
  item_id : text;
};
type OrderPayload = record {
  supplier_id : text;
  quantity : nat32;
  item_id : text;
};
type Result = variant { Ok; Err : Message };
type Result_1 = variant { Ok : Item; Err : Message };
type Result_2 = variant { Ok : Order; Err : Message };
type Result_3 = variant { Ok : Supplier; Err : Message };
type Supplier = record {
  id : text;
  name : text;
  created_at : nat64;
  items_supplied_ids : vec text;
  contact_info : text;
};
type SupplierPayload = record { name : text; contact_info : text };
service : {
  add_initial_data : () -> (Result);
  count_items : () -> (nat64) query;
  count_orders : () -> (nat64) query;
  count_suppliers : () -> (nat64) query;
  create_item : (ItemPayload) -> (Result_1);
  create_order : (OrderPayload) -> (Result_2);
  create_supplier : (SupplierPayload) -> (Result_3);
  delete_item : (text) -> (Result);
  delete_order : (text) -> (Result);
  delete_supplier : (text) -> (Result);
  filter_orders_by_supplier : (text) -> (vec Order) query;
  get_all_items : () -> (vec Item) query;
  get_all_orders : () -> (vec Order) query;
  get_all_suppliers : () -> (vec Supplier) query;
  get_item_by_id : (text) -> (Result_1) query;
  get_items_by_supplier : (text) -> (vec Item) query;
  get_supplier_by_id : (text) -> (Result_3) query;
  search_items_by_name : (text) -> (vec Item) query;
  update_item : (text, ItemPayload) -> (Result_1);
  update_order : (text, OrderPayload) -> (Result_2);
  update_order_status : (text, text) -> (Result_2);
  update_supplier : (text, SupplierPayload) -> (Result_3);
}
